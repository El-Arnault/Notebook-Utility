{
    "env": {
        "es6": true,
        "node": true
    },
    "parserOptions": {
        "ecmaVersion": 8,
        "ecmaFeatures": {
            "jsx": true,
            "globalReturn": true
        }
    },
    "plugins": [
        "node"
    ],
    "rules": {
        // Rules for indentation
        "indent": [
            "error",
            4,
            {
                "FunctionDeclaration": {
                    "parameters": "first"
                },
                "VariableDeclarator": {
                    "var": 2, 
                    "let": 2, 
                    "const": 3
                },
                "ArrayExpression": "first",
                "ObjectExpression": "first",
                "SwitchCase": 1
            }
        ],
        // Rules for property notation
        "dot-location": [
            "warn",
            "object"
        ],
        "no-whitespace-before-property": "error",
        // Rule for splitting commands with semicolon
        "semi-spacing": [
            "error",
            { 
                "before": false, 
                "after": true 
            }
        ],
        // Rule for comma notation
        "comma-spacing": [
            "error",
            { 
                "before": false, 
                "after": true 
            }
        ],
        // Rule for constant conditions
        "no-constant-condition": [
            "error", 
            {
                "checkLoops": false 
            }
        ],
        // Rule for assignment in conditions
        "no-cond-assign": "error",
        // Rule for spacing between function name and parentheses
        "space-before-function-paren": [
            "error",
            "never"
        ],
        // Rule for spacing infix operators
        "space-infix-ops": "error",
        // Rule for spacing unary operators
        "space-unary-ops": [
            "error", 
            { 
                "words": false, 
                "nonwords": false 
            }
        ],
        // Rule for spaces in parentheses
        "space-in-parens": [
            "error",
            "never"
        ],
        // Rule for trailing spaces
        "no-trailing-spaces": "error",
        // Rule for spacing before block
        "space-before-blocks": [
            "error", 
            "always"
        ],
        // Rule for spacing inside arrays
        "array-bracket-spacing" : [
            "error",
            "never"
        ],
        // Rule for objects declaration
        "object-curly-newline": ["error", {
            "ObjectExpression": "always",
            "ObjectPattern": { "multiline": true }
        }],
        // Rule for spacing inside objects
        "object-curly-spacing": [
            "error",
            "always"
        ],
        // Rules for template spacing
        "template-curly-spacing": ["error", "never"],
        "template-tag-spacing": ["error", "never"],
        // Rule for mixing tabs and spaces
        "no-mixed-spaces-and-tabs" : "error",
        // Rule for multiple spaces
        "no-multi-spaces": "error",
        // Rule for multi-line string literals
        "no-multi-str": "off",
        // Rule for padding inside blocks
        // "padded-blocks": [
        //     "error", 
        //     { 
        //         "blocks": "never",
        //         "switches": "never",
        //         "classes": "never"
        //     }
        // ],

        // Rule for system linebreak style
        "linebreak-style": [
            "error",
            "unix"
        ],
        // Rule for quoting style for string literals
        "quotes": [
            "error",
            "double"
        ],
        // Rule for semicolons usage
        "semi": [
            "error",
            "always"
        ],
        // Rule for curly braces placement
        "curly": [
            "error",
            "all"
        ],
        // Rule for linebreak in the end of file
        "eol-last": [
            "error",
            "never"
        ],
        // Rule for typeof checks
        "valid-typeof": [
            "error", 
            { "requireStringLiterals": true }
        ],

        // Rules for useless and unsafe constructions
        "no-unreachable": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": "error",
        "no-unused-expressions": ["error", { "allowShortCircuit": true, "allowTernary": true, "allowTaggedTemplates": true }],
        "no-unused-vars": ["error", { "vars": "all", "args": "none", "ignoreRestSiblings": true }],
        "no-use-before-define": ["error", { "functions": false, "classes": false, "variables": false }],
        "no-useless-call": "error",
        "no-useless-computed-key": "error",
        "no-useless-constructor": "error",
        "no-useless-rename": "error",
        "no-useless-return": "error",

        // Rules for node.js
        "node/no-deprecated-api": "error",
        "node/process-exit-as-throw": "error"
    }
}